---
title: "USA24-outputs"
format: html
editor: source
---

```{r setup}
cfg <- config::get()
source(cfg$library)

# analysis on the city level + foreign vote counts 
data <- read.csv(file.path(cfg$data, "USA-2024",
                           "2024_US_County_Level_Presidential_Results.csv"), 
                 header = T, sep = ",")

A <- data$votes_gop
B <- data$votes_dem 
A_title <- "Donald Trump"
B_title <- "Kamala Harris"
```

## EDA 

```{r}
data |> nrow()

boxplot(c(A, B))
sd(c(A,B))
```


## all votes 

```{r}
numbers <- data$total_votes

plot(1:length(numbers), numbers) # 7 outliers removed
abline(h = quantile(numbers, 0.75), col = 'blue')

plot(1:length(numbers[numbers<2e+6]), numbers[numbers<2e+6]) # outliers removed
abline(h = quantile(numbers, 0.75), col = 'blue')
# max(numbers)

OMV(numbers)
OOM(numbers[numbers<quantile(numbers, 0.95)])
```


```{r both}
 numbers <- c(A, B)
# 
# plot(1:length(numbers), numbers) # 7 outliers removed
# abline(h = quantile(numbers, 0.75) , col = 'blue')
# 
# # plot(1:length(numbers[numbers<10^5]), numbers[numbers<10^5]) 
# # abline(h = quantile(numbers, 0.75), col = 'blue')
# 
# OMV(numbers)
# OOM(numbers[numbers<quantile(numbers, 0.75)])
```



```{r both}
first <- digits(numbers, first = 1)
plot_BL_RelFreq_bar(digits(numbers, first = 1))
save_pdf("USA24-both-first_digits")
```

```{r both}
plot_BL_RelFreq_bar(digits(numbers, first = 2))
save_pdf("USA24-both-first_two_digits")
```

```{r both}
plot_BL_RelFreq_bar(digits_on_position(numbers, 2, na.rm = T), position = 2)
save_pdf("USA24-both-second_digits")
```


```{r both}
plot_BL_RelFreq_bar(digits(numbers, last = 1), last = T)
save_pdf("USA24-both-last_digits")
```


```{r both}
plot_BL_RelFreq_bar(digits_on_position(numbers, position = 3, na.rm = T), position = 3)
save_pdf("USA24-both-third_digits")
```

```{r both}
plot_BL_RelFreq_bar(digits_on_position(numbers, position = 4, na.rm = T), position = 4)
# save_pdf("USA24-both-fourth_digits")
```


```{r both, eval = F}
plot_BL_RelFreq_bar(digits_on_position(numbers, position = 5, na.rm = T), position = 5)
plot_BL_RelFreq_bar(digits_on_position(numbers, position = 6, na.rm = T), position = 6)

```

## per candidate

```{r dualplot}
OMV(A)
OOM(A[A<10000])

OMV(B)
OOM(B[B<10000])
```


```{r dualplot}
dualplot_BL_RelFreq_bar(A = digits(A, first = 1), A_title = A_title, 
                        B = digits(B, first = 1), B_title = B_title, 
                        last = F)
save_pdf("USA24-dual-first_digits")
```


```{r dualplot}
dualplot_BL_RelFreq_bar(digits(A, first = 2), A_title, 
                        digits(B, first = 2), B_title, 
                        last = F, max = 0.05)
save_pdf("USA24-dual-first_two_digits")
```


```{r dualplot}
dualplot_BL_RelFreq_bar(digits_on_position(A, position = 2, na.rm = T), A_title, position = 2, 
                        digits_on_position(B, position = 2, na.rm = T), B_title, 
                        last = F, max =0.15)
save_pdf("USA24-dual-second_digits")
```

```{r dualplot}
dualplot_BL_RelFreq_bar(digits_on_position(A, position = 3, na.rm = T), A_title, position = 3, 
                        digits_on_position(B, position = 3, na.rm = T), B_title, 
                        last = F, max =0.12)
save_pdf("USA24-dual-third_digits")
```


```{r dualplot}
dualplot_BL_RelFreq_bar(digits_on_position(A, position = 4, na.rm = T), A_title, position = 4, 
                        digits_on_position(B, position = 4, na.rm = T), B_title, 
                        last = F, max = 0.108)
# save_pdf("USA24-dual-fourth_digits")
```



```{r dualplot}
dualplot_BL_RelFreq_bar(digits(A, last = 1), A_title, 
                        digits(B, last = 1), B_title, 
                        last = T, max = 0.118)
save_pdf("USA24-dual-last_digits")
```


```{r dualplot, eval = F}
dualplot_BL_RelFreq_bar(digits(A, last = 2), A_title,
                        digits(B, last = 2), B_title,
                        last = T, max = 0.015)
save_pdf("USA24-dual-last_two_digits")

# Špatné použití: tady se vybírají poslední 2 číslice, jenže nehledě na velikost čísla. Pokud je v našem datasetu dost malých čísel, bude to tím ovlivněno, tudíž nejde takhle dělat graf. 
```



```{r}
both <- c(A, B)

intervals <- list(
  c(1, 10),
  c(10, 100),
  c(100, 1000),
  c(1000, 10000),
  c(10000, 100000), 
  c(100000, 1000000), 
  c(1000000, 10000000)
)

# Funkce pro výpočet procentuálního zastoupení číslic
calculate_digit_percentages <- function(data, intervals, digits_on_position) {
  results <- lapply(intervals, function(interval) {
    interval_data <- data[data >= interval[1] & data < interval[2]]
    digit_counts <- table(digits_on_position(interval_data, 1))
    digit_percentages <- (digit_counts / length(interval_data))
    overall_data <- length(interval_data)
    list(digit_percentages = digit_percentages, overall_data = overall_data)
  })
  
  results
}

# Výpočet procentuálního zastoupení číslic
results <- calculate_digit_percentages(both, intervals, digits_on_position)

# Vytvoření tabulky
table <- tibble(
  "Left Border Point" = sapply(intervals, function(x) x[1]),
  "Right Border Point" = sapply(intervals, function(x) x[2]),
  "Digit 1" = sapply(results, function(x) x$digit_percentages["1"]),
  "Digit 2" = sapply(results, function(x) x$digit_percentages["2"]),
  "Digit 3" = sapply(results, function(x) x$digit_percentages["3"]),
  "Digit 4" = sapply(results, function(x) x$digit_percentages["4"]),
  "Digit 5" = sapply(results, function(x) x$digit_percentages["5"]),
  "Digit 6" = sapply(results, function(x) x$digit_percentages["6"]),
  "Digit 7" = sapply(results, function(x) x$digit_percentages["7"]),
  "Digit 8" = sapply(results, function(x) x$digit_percentages["8"]),
  "Digit 9" = sapply(results, function(x) x$digit_percentages["9"]),
  "# of Data points" = sapply(results, function(x) x$overall_data),
  "% Overall Data" = (sapply(results, function(x) x$overall_data) / sum(sapply(results, function(x) x$overall_data))) * 100
)

table<- t(table)

colnames(table) <- c("1", "2", "3", "4","5", '6', '7')
table_dig<-table[-c(1,2,12,13),]

table_dig <- data.frame(table_dig) |> mutate(digit = 1:9, 
                                             X1 = ifelse(is.na(X1), 0, X1), 
                                             X7 = ifelse(is.na(X7), 0, X7))

table_dig |> 
  pivot_longer(cols = c("X1", "X2","X3", "X4","X5", "X6", "X7"), names_to = 'order', values_to = 'relative frequency') |> 
  ggplot(aes(x = digit, y = `relative frequency`)) + 
  geom_bar(stat = 'identity', position = 'dodge', fill = barvy$VSE['darkpink']) + 
  scale_x_continuous(n.breaks = 10) +
  #ggtitle("Digital development pattern") + 
  facet_grid(.~order, labeller = 
               labeller(order = c(X1 = paste('1<=X<10\n', round(table[13,1],2), "%"), 
                                  X2 = paste("10<=X<100\n",  round(table[13,2],2), "%"),
                                  X3 = paste('100<=X<1000\n',  round(table[13,3],2), "%"),
                                  X4 = paste("10^3<=X<10^4\n",  round(table[13,4],2), "%"),
                                  X5 = paste('10^4<=X<10^5\n', round(table[13,5],2), "%"), 
                                  X6 = paste('10^5<=X<10^6\n', round(table[13,6],2), "%"), 
                                  X7 = paste('10^6<=X<10^7\n', round(table[13,6],2), "%")
                                  ))) + 
  theme_BL(legend.position = 'none') 

save_pdf("USA24-digital_development_pattern")

```

